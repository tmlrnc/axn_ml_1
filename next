
--------------------------------------------------------------------
Your code has been rated at 10.00/10 (previous run: 10.00/10, +0.00)

************* Module discrete.config
discrete/config.py:24:8: C0103: Attribute name "SVM_random_state" doesn't conform to snake_case naming style (invalid-name)
discrete/config.py:25:8: C0103: Attribute name "LR_random_state" doesn't conform to snake_case naming style (invalid-name)
discrete/config.py:26:8: C0103: Attribute name "DTC_random_state" doesn't conform to snake_case naming style (invalid-name)
discrete/config.py:27:8: C0103: Attribute name "RNR_radius" doesn't conform to snake_case naming style (invalid-name)
discrete/config.py:28:8: C0103: Attribute name "RNN_window_size" doesn't conform to snake_case naming style (invalid-name)
discrete/config.py:29:8: C0103: Attribute name "RNN_n" doesn't conform to snake_case naming style (invalid-name)
discrete/config.py:30:8: C0103: Attribute name "RNN_epochs" doesn't conform to snake_case naming style (invalid-name)
discrete/config.py:31:8: C0103: Attribute name "RNN_learning_rate" doesn't conform to snake_case naming style (invalid-name)
discrete/config.py:32:8: C0103: Attribute name "MLP_solver" doesn't conform to snake_case naming style (invalid-name)
discrete/config.py:33:8: C0103: Attribute name "MLP_random_state" doesn't conform to snake_case naming style (invalid-name)
discrete/config.py:34:8: C0103: Attribute name "MLP_layers" doesn't conform to snake_case naming style (invalid-name)
discrete/config.py:35:8: C0103: Attribute name "MLP_neurons" doesn't conform to snake_case naming style (invalid-name)
discrete/config.py:36:8: C0103: Attribute name "MLP_alpha" doesn't conform to snake_case naming style (invalid-name)
discrete/config.py:8:0: R0205: Class 'OHEConfig' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
discrete/config.py:8:0: R0902: Too many instance attributes (15/7) (too-many-instance-attributes)
discrete/config.py:8:0: R0903: Too few public methods (0/2) (too-few-public-methods)
discrete/config.py:44:7: C0121: Comparison to None should be 'expr is None' (singleton-comparison)
************* Module discrete.discretizer
discrete/discretizer.py:17:30: C0326: Exactly one space required after comma
    def __init__(self, file_in,vl_discretize_list):
                              ^ (bad-whitespace)
discrete/discretizer.py:33:22: C0326: No space allowed before :
            if i == 0 :
                      ^ (bad-whitespace)
discrete/discretizer.py:37:24: C0326: No space allowed before :
            elif i == 2 :
                        ^ (bad-whitespace)
discrete/discretizer.py:44:68: C0326: No space allowed around keyword argument assignment
        self.data_frame_all = pandas.read_csv(file_in).fillna(value = 0)
                                                                    ^ (bad-whitespace)
discrete/discretizer.py:56:33: C0326: Exactly one space required after comma
    def write_discretize_csv(self,file_out_name):
                                 ^ (bad-whitespace)
discrete/discretizer.py:72:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
discrete/discretizer.py:72:32: C0326: No space allowed before :
        if(self.ss == "dbscan") :
                                ^ (bad-whitespace)
discrete/discretizer.py:79:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
discrete/discretizer.py:89:0: C0325: Unnecessary parens after 'if' keyword (superfluous-parens)
discrete/discretizer.py:106:53: C0326: Exactly one space required after comma
        df_0 = pd.read_csv(self.file_in_name, sep=',',usecols=self.discretize_list )
                                                     ^ (bad-whitespace)
discrete/discretizer.py:106:83: C0326: No space allowed before bracket
        df_0 = pd.read_csv(self.file_in_name, sep=',',usecols=self.discretize_list )
                                                                                   ^ (bad-whitespace)
discrete/discretizer.py:1:0: C0114: Missing module docstring (missing-module-docstring)
discrete/discretizer.py:9:0: W0404: Reimport 'pandas' (imported line 2) (reimported)
discrete/discretizer.py:10:0: W0404: Reimport 'pandas' (imported line 2) (reimported)
discrete/discretizer.py:11:0: W0404: Reimport 'numpy' (imported line 3) (reimported)
discrete/discretizer.py:28:8: C0103: Attribute name "Xt_VL_K_list" doesn't conform to snake_case naming style (invalid-name)
discrete/discretizer.py:113:8: C0103: Attribute name "ss" doesn't conform to snake_case naming style (invalid-name)
discrete/discretizer.py:13:0: C0112: Empty class docstring (empty-docstring)
discrete/discretizer.py:13:0: R0205: Class 'Discretizer' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
discrete/discretizer.py:13:0: R0902: Too many instance attributes (16/7) (too-many-instance-attributes)
discrete/discretizer.py:17:4: R1711: Useless return at end of function or method (useless-return)
discrete/discretizer.py:66:12: C0103: Variable name "nh" doesn't conform to snake_case naming style (invalid-name)
discrete/discretizer.py:109:8: C0103: Variable name "X" doesn't conform to snake_case naming style (invalid-name)
discrete/discretizer.py:125:12: C0103: Variable name "Xt_VL" doesn't conform to snake_case naming style (invalid-name)
discrete/discretizer.py:134:16: C0103: Variable name "ea" doesn't conform to snake_case naming style (invalid-name)
discrete/discretizer.py:139:12: C0103: Variable name "Xt_VL_K" doesn't conform to snake_case naming style (invalid-name)
discrete/discretizer.py:149:12: C0103: Variable name "Xt_VL_K" doesn't conform to snake_case naming style (invalid-name)
discrete/discretizer.py:159:12: C0415: Import outside toplevel (sklearn.cluster.DBSCAN) (import-outside-toplevel)
discrete/discretizer.py:111:8: W0201: Attribute 'headers' defined outside __init__ (attribute-defined-outside-init)
discrete/discretizer.py:113:8: W0201: Attribute 'ss' defined outside __init__ (attribute-defined-outside-init)
discrete/discretizer.py:177:0: C0115: Missing class docstring (missing-class-docstring)
discrete/discretizer.py:177:0: R0205: Class 'DiscretizerBuilder' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
discrete/discretizer.py:184:11: C0121: Comparison to None should be 'expr is None' (singleton-comparison)
discrete/discretizer.py:3:0: W0611: Unused numpy imported as np (unused-import)
discrete/discretizer.py:5:0: W0611: Unused K_Means imported from discrete.vl_kmeans_kmedian (unused-import)
discrete/discretizer.py:5:0: W0611: Unused normalizer imported from discrete.vl_kmeans_kmedian (unused-import)
discrete/discretizer.py:9:0: C0411: third party import "import pandas" should be placed before "from discrete.vl_kmeans_kmedian import K_Means, normalizer" (wrong-import-order)
discrete/discretizer.py:10:0: C0411: third party import "import pandas as pd" should be placed before "from discrete.vl_kmeans_kmedian import K_Means, normalizer" (wrong-import-order)
discrete/discretizer.py:11:0: C0411: third party import "import numpy" should be placed before "from discrete.vl_kmeans_kmedian import K_Means, normalizer" (wrong-import-order)
discrete/discretizer.py:9:0: C0412: Imports from package pandas are not grouped (ungrouped-imports)
discrete/discretizer.py:11:0: C0412: Imports from package numpy are not grouped (ungrouped-imports)
************* Module discrete.binize
discrete/binize.py:12:0: C0325: Unnecessary parens after 'return' keyword (superfluous-parens)
discrete/binize.py:14:16: C0326: No space allowed after bracket
class VL_Binizer( ):
                ^ (bad-whitespace)
discrete/binize.py:14:18: C0326: No space allowed before bracket
class VL_Binizer( ):
                  ^ (bad-whitespace)
discrete/binize.py:83:47: C0326: Exactly one space required after comma
                if CheckForLess(self.edge_array,col_max) == False:
                                               ^ (bad-whitespace)
discrete/binize.py:91:0: C0325: Unnecessary parens after 'in' keyword (superfluous-parens)
discrete/binize.py:1:0: C0114: Missing module docstring (missing-module-docstring)
discrete/binize.py:5:0: W0404: Reimport 'numpy' (imported line 3) (reimported)
discrete/binize.py:11:0: C0103: Function name "CheckForLess" doesn't conform to snake_case naming style (invalid-name)
discrete/binize.py:11:0: C0116: Missing function or method docstring (missing-function-docstring)
discrete/binize.py:14:0: C0103: Class name "VL_Binizer" doesn't conform to PascalCase naming style (invalid-name)
discrete/binize.py:14:0: C0115: Missing class docstring (missing-class-docstring)
discrete/binize.py:16:4: W0102: Dangerous default value [] as argument (dangerous-default-value)
discrete/binize.py:22:4: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
discrete/binize.py:22:4: C0103: Argument name "y" doesn't conform to snake_case naming style (invalid-name)
discrete/binize.py:22:4: C0116: Missing function or method docstring (missing-function-docstring)
discrete/binize.py:22:4: R0914: Too many local variables (16/15) (too-many-locals)
discrete/binize.py:47:12: C0103: Variable name "jj" doesn't conform to snake_case naming style (invalid-name)
discrete/binize.py:83:19: C0121: Comparison to False should be 'not expr' (singleton-comparison)
discrete/binize.py:22:21: W0613: Unused argument 'y' (unused-argument)
discrete/binize.py:139:4: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
discrete/binize.py:139:4: C0116: Missing function or method docstring (missing-function-docstring)
discrete/binize.py:143:8: C0103: Variable name "Xt" doesn't conform to snake_case naming style (invalid-name)
discrete/binize.py:150:12: C0103: Variable name "jj" doesn't conform to snake_case naming style (invalid-name)
discrete/binize.py:161:15: E1101: Instance of 'VL_Binizer' has no '_encoder' member (no-member)
discrete/binize.py:163:4: C0103: Argument name "Xt" doesn't conform to snake_case naming style (invalid-name)
discrete/binize.py:163:4: C0116: Missing function or method docstring (missing-function-docstring)
discrete/binize.py:168:17: E1101: Instance of 'VL_Binizer' has no '_encoder' member (no-member)
discrete/binize.py:170:8: C0103: Variable name "Xinv" doesn't conform to snake_case naming style (invalid-name)
discrete/binize.py:176:12: C0103: Variable name "jj" doesn't conform to snake_case naming style (invalid-name)
discrete/binize.py:100:8: W0201: Attribute 'bin_edges_' defined outside __init__ (attribute-defined-outside-init)
discrete/binize.py:101:8: W0201: Attribute 'n_bins_' defined outside __init__ (attribute-defined-outside-init)
discrete/binize.py:4:0: C0411: standard import "import warnings" should be placed before "import numpy as np" (wrong-import-order)
************* Module discrete.generate_timeseries
discrete/generate_timeseries.py:29:48: C0326: Exactly one space required after comma
    parser.add_argument('--dicretize', nargs='+',  action='append')
                                                ^ (bad-whitespace)
discrete/generate_timeseries.py:124:0: C0305: Trailing newlines (trailing-newlines)
discrete/generate_timeseries.py:1:0: C0114: Missing module docstring (missing-module-docstring)
discrete/generate_timeseries.py:9:0: W0404: Reimport 'pandas' (imported line 8) (reimported)
discrete/generate_timeseries.py:11:0: W0404: Reimport 'numpy' (imported line 10) (reimported)
discrete/generate_timeseries.py:18:0: C0116: Missing function or method docstring (missing-function-docstring)
discrete/generate_timeseries.py:75:4: W0621: Redefining name 'csv' from outer scope (line 6) (redefined-outer-name)
discrete/generate_timeseries.py:36:0: R0914: Too many local variables (27/15) (too-many-locals)
discrete/generate_timeseries.py:73:4: C0103: Variable name "df" doesn't conform to snake_case naming style (invalid-name)
discrete/generate_timeseries.py:75:4: W0404: Reimport 'csv' (imported line 6) (reimported)
discrete/generate_timeseries.py:75:4: C0415: Import outside toplevel (csv) (import-outside-toplevel)
discrete/generate_timeseries.py:81:27: C0103: Variable name "io" doesn't conform to snake_case naming style (invalid-name)
discrete/generate_timeseries.py:83:12: C0103: Variable name "r" doesn't conform to snake_case naming style (invalid-name)
discrete/generate_timeseries.py:94:18: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)
discrete/generate_timeseries.py:95:8: C0103: Variable name "r" doesn't conform to snake_case naming style (invalid-name)
discrete/generate_timeseries.py:104:16: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
discrete/generate_timeseries.py:112:31: C0103: Variable name "io" doesn't conform to snake_case naming style (invalid-name)
discrete/generate_timeseries.py:52:4: W0612: Unused variable 'file_out_discrete' (unused-variable)
discrete/generate_timeseries.py:55:4: W0612: Unused variable 'file_out_ohe_dis' (unused-variable)
discrete/generate_timeseries.py:56:4: W0612: Unused variable 'vl_dicretize_list_many' (unused-variable)
discrete/generate_timeseries.py:64:4: W0612: Unused variable 'file_out_org' (unused-variable)
discrete/generate_timeseries.py:73:4: W0612: Unused variable 'df' (unused-variable)
discrete/generate_timeseries.py:3:0: W0611: Unused K_Means imported from discrete.vl_kmeans_kmedian (unused-import)
discrete/generate_timeseries.py:3:0: W0611: Unused normalizer imported from discrete.vl_kmeans_kmedian (unused-import)
discrete/generate_timeseries.py:4:0: W0611: Unused VL_Binizer imported from discrete.binize (unused-import)
discrete/generate_timeseries.py:5:0: W0611: Unused VL_Discretizer_KMeans imported from discrete.binize_kmeans (unused-import)
discrete/generate_timeseries.py:6:0: W0611: Unused import csv (unused-import)
discrete/generate_timeseries.py:9:0: W0611: Unused pandas imported as pd (unused-import)
discrete/generate_timeseries.py:10:0: W0611: Unused import numpy (unused-import)
discrete/generate_timeseries.py:14:0: W0611: Unused OneHotEncoderBuilder imported from ohe.encoder (unused-import)
discrete/generate_timeseries.py:15:0: W0611: Unused DiscretizerBuilder imported from discrete.discretizer (unused-import)
discrete/generate_timeseries.py:6:0: C0411: standard import "import csv" should be placed before "from discrete.vl_kmeans_kmedian import K_Means, normalizer" (wrong-import-order)
discrete/generate_timeseries.py:8:0: C0411: third party import "import pandas" should be placed before "from discrete.vl_kmeans_kmedian import K_Means, normalizer" (wrong-import-order)
discrete/generate_timeseries.py:9:0: C0411: third party import "import pandas as pd" should be placed before "from discrete.vl_kmeans_kmedian import K_Means, normalizer" (wrong-import-order)
discrete/generate_timeseries.py:10:0: C0411: third party import "import numpy" should be placed before "from discrete.vl_kmeans_kmedian import K_Means, normalizer" (wrong-import-order)
discrete/generate_timeseries.py:11:0: C0411: third party import "import numpy as np" should be placed before "from discrete.vl_kmeans_kmedian import K_Means, normalizer" (wrong-import-order)
discrete/generate_timeseries.py:15:0: C0412: Imports from package discrete are not grouped (ungrouped-imports)
************* Module discrete.vl_kmeans_kmedian
discrete/vl_kmeans_kmedian.py:32:0: C0301: Line too long (166/160) (line-too-long)
discrete/vl_kmeans_kmedian.py:44:16: C0326: Exactly one space required after comma
    def fit(self,data):
                ^ (bad-whitespace)
discrete/vl_kmeans_kmedian.py:66:96: C0326: Exactly one space required after comma
                self.centroids[classification] = np.average(self.classifications[classification],axis=0)
                                                                                                ^ (bad-whitespace)
discrete/vl_kmeans_kmedian.py:80:20: C0326: Exactly one space required after comma
    def predict(self,data):
                    ^ (bad-whitespace)
discrete/vl_kmeans_kmedian.py:277:43: C0326: Exactly one space required around comparison
                medians[kk] = np.median(X[y==kk], axis=0)
                                           ^^ (bad-whitespace)
discrete/vl_kmeans_kmedian.py:301:81: C0326: Exactly one space required around comparison
            error += np.sum(utils.euclidean_dist_squared(X[closest_median_indexes==i], medians[[i]]))
                                                                                 ^^ (bad-whitespace)
discrete/vl_kmeans_kmedian.py:303:0: C0305: Trailing newlines (trailing-newlines)
discrete/vl_kmeans_kmedian.py:1:0: C0114: Missing module docstring (missing-module-docstring)
discrete/vl_kmeans_kmedian.py:2:0: W0404: Reimport 'numpy' (imported line 1) (reimported)
discrete/vl_kmeans_kmedian.py:8:0: C0103: Class name "K_Means" doesn't conform to PascalCase naming style (invalid-name)
discrete/vl_kmeans_kmedian.py:37:53: W0622: Redefining built-in 'type' (redefined-builtin)
discrete/vl_kmeans_kmedian.py:37:53: W0613: Unused argument 'type' (unused-argument)
discrete/vl_kmeans_kmedian.py:44:4: C0116: Missing function or method docstring (missing-function-docstring)
discrete/vl_kmeans_kmedian.py:54:12: W0621: Redefining name 'i' from outer scope (line 51) (redefined-outer-name)
discrete/vl_kmeans_kmedian.py:70:16: C0103: Variable name "c" doesn't conform to snake_case naming style (invalid-name)
discrete/vl_kmeans_kmedian.py:80:4: C0116: Missing function or method docstring (missing-function-docstring)
discrete/vl_kmeans_kmedian.py:46:8: W0201: Attribute 'centroids' defined outside __init__ (attribute-defined-outside-init)
discrete/vl_kmeans_kmedian.py:52:12: W0201: Attribute 'classifications' defined outside __init__ (attribute-defined-outside-init)
discrete/vl_kmeans_kmedian.py:86:0: C0103: Class name "KMeans_assign" doesn't conform to PascalCase naming style (invalid-name)
discrete/vl_kmeans_kmedian.py:86:0: R0205: Class 'KMeans_assign' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
discrete/vl_kmeans_kmedian.py:86:0: R0902: Too many instance attributes (8/7) (too-many-instance-attributes)
discrete/vl_kmeans_kmedian.py:148:4: R1711: Useless return at end of function or method (useless-return)
discrete/vl_kmeans_kmedian.py:158:12: W0612: Unused variable 'iteration' (unused-variable)
discrete/vl_kmeans_kmedian.py:173:4: R1711: Useless return at end of function or method (useless-return)
discrete/vl_kmeans_kmedian.py:244:0: C0413: Import "from sklearn.preprocessing import MinMaxScaler" should be placed at the top of the module (wrong-import-position)
discrete/vl_kmeans_kmedian.py:249:0: W0404: Reimport 'numpy' (imported line 1) (reimported)
discrete/vl_kmeans_kmedian.py:249:0: C0413: Import "import numpy as np" should be placed at the top of the module (wrong-import-position)
discrete/vl_kmeans_kmedian.py:250:0: C0413: Import "import utils" should be placed at the top of the module (wrong-import-position)
discrete/vl_kmeans_kmedian.py:252:0: C0115: Missing class docstring (missing-class-docstring)
discrete/vl_kmeans_kmedian.py:258:4: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
discrete/vl_kmeans_kmedian.py:258:4: C0116: Missing function or method docstring (missing-function-docstring)
discrete/vl_kmeans_kmedian.py:259:8: C0103: Variable name "N" doesn't conform to snake_case naming style (invalid-name)
discrete/vl_kmeans_kmedian.py:259:11: C0103: Variable name "D" doesn't conform to snake_case naming style (invalid-name)
discrete/vl_kmeans_kmedian.py:260:8: C0103: Variable name "y" doesn't conform to snake_case naming style (invalid-name)
discrete/vl_kmeans_kmedian.py:263:12: C0103: Variable name "kk" doesn't conform to snake_case naming style (invalid-name)
discrete/vl_kmeans_kmedian.py:271:20: E1101: Module 'utils' has no 'euclidean_dist_squared' member (no-member)
discrete/vl_kmeans_kmedian.py:273:12: C0103: Variable name "y" doesn't conform to snake_case naming style (invalid-name)
discrete/vl_kmeans_kmedian.py:276:16: C0103: Variable name "kk" doesn't conform to snake_case naming style (invalid-name)
discrete/vl_kmeans_kmedian.py:288:4: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
discrete/vl_kmeans_kmedian.py:288:4: C0116: Missing function or method docstring (missing-function-docstring)
discrete/vl_kmeans_kmedian.py:290:16: E1101: Module 'utils' has no 'euclidean_dist_squared' member (no-member)
discrete/vl_kmeans_kmedian.py:294:4: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
discrete/vl_kmeans_kmedian.py:294:4: C0116: Missing function or method docstring (missing-function-docstring)
discrete/vl_kmeans_kmedian.py:295:8: C0103: Variable name "N" doesn't conform to snake_case naming style (invalid-name)
discrete/vl_kmeans_kmedian.py:295:11: C0103: Variable name "D" doesn't conform to snake_case naming style (invalid-name)
discrete/vl_kmeans_kmedian.py:301:28: E1101: Module 'utils' has no 'euclidean_dist_squared' member (no-member)
discrete/vl_kmeans_kmedian.py:295:8: W0612: Unused variable 'N' (unused-variable)
discrete/vl_kmeans_kmedian.py:295:11: W0612: Unused variable 'D' (unused-variable)
discrete/vl_kmeans_kmedian.py:3:0: C0411: standard import "import random" should be placed before "import numpy as np" (wrong-import-order)
discrete/vl_kmeans_kmedian.py:4:0: C0411: standard import "from collections import defaultdict" should be placed before "import numpy as np" (wrong-import-order)
discrete/vl_kmeans_kmedian.py:249:0: C0412: Imports from package numpy are not grouped (ungrouped-imports)
************* Module discrete.__main__
discrete/__main__.py:29:107: C0303: Trailing whitespace (trailing-whitespace)
discrete/__main__.py:30:108: C0303: Trailing whitespace (trailing-whitespace)
discrete/__main__.py:32:73: C0303: Trailing whitespace (trailing-whitespace)
discrete/__main__.py:46:0: C0330: Wrong continued indentation (add 16 spaces).
        action = 'append', help = 'columns of data to NOT be encoded or discretized - remove from processing without removing from raw data because they might be usseful to know latrer - like first name')
        ^               | (bad-continuation)
discrete/__main__.py:46:0: C0301: Line too long (204/160) (line-too-long)
discrete/__main__.py:46:15: C0326: No space allowed around keyword argument assignment
        action = 'append', help = 'columns of data to NOT be encoded or discretized - remove from processing without removing from raw data because they might be usseful to know latrer - like first name')
               ^ (bad-whitespace)
discrete/__main__.py:46:32: C0326: No space allowed around keyword argument assignment
        action = 'append', help = 'columns of data to NOT be encoded or discretized - remove from processing without removing from raw data because they might be usseful to know latrer - like first name')
                                ^ (bad-whitespace)
discrete/__main__.py:49:48: C0326: Exactly one space required after comma
    parser.add_argument('--dicretize', nargs='+',  action='append', help='discretization strategy - uniform, quantile analyst_supervised kmeans')
                                                ^ (bad-whitespace)
discrete/__main__.py:99:33: C0326: Exactly one space required after comma
    dfd2.to_csv(file_in_name_drop,index=False)
                                 ^ (bad-whitespace)
discrete/__main__.py:125:22: C0326: Exactly one space required before assignment
        file_in_name  = new_file_out
                      ^ (bad-whitespace)
discrete/__main__.py:129:28: C0326: Exactly one space required after comma
    dll2.to_csv(file_out_org,index=False)
                            ^ (bad-whitespace)
discrete/__main__.py:174:33: C0326: Exactly one space required after comma
    dfd2.to_csv(file_in_name_drop,index=False)
                                 ^ (bad-whitespace)
discrete/__main__.py:202:22: C0326: Exactly one space required before assignment
        file_in_name  = new_file_out
                      ^ (bad-whitespace)
discrete/__main__.py:206:28: C0326: Exactly one space required after comma
    dll2.to_csv(file_out_org,index=False)
                            ^ (bad-whitespace)
discrete/__main__.py:251:33: C0326: Exactly one space required after comma
    dfd2.to_csv(file_in_name_drop,index=False)
                                 ^ (bad-whitespace)
discrete/__main__.py:297:22: C0326: Exactly one space required before assignment
        file_in_name  = new_file_out
                      ^ (bad-whitespace)
discrete/__main__.py:301:28: C0326: Exactly one space required after comma
    dll2.to_csv(file_out_org,index=False)
                            ^ (bad-whitespace)
discrete/__main__.py:309:0: C0305: Trailing newlines (trailing-newlines)
discrete/__main__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
discrete/__main__.py:9:0: W0404: Reimport 'pandas' (imported line 8) (reimported)
discrete/__main__.py:11:0: W0404: Reimport 'numpy' (imported line 10) (reimported)
discrete/__main__.py:17:0: C0103: Constant name "description" doesn't conform to UPPER_CASE naming style (invalid-name)
discrete/__main__.py:36:0: C0116: Missing function or method docstring (missing-function-docstring)
discrete/__main__.py:58:0: R0914: Too many local variables (32/15) (too-many-locals)
discrete/__main__.py:120:8: C0103: Variable name "dl" doesn't conform to snake_case naming style (invalid-name)
discrete/__main__.py:76:4: W0612: Unused variable 'ignore' (unused-variable)
discrete/__main__.py:78:4: W0612: Unused variable 'file_out_ohe_dis' (unused-variable)
discrete/__main__.py:104:4: W0612: Unused variable 'mycol' (unused-variable)
discrete/__main__.py:133:0: R0914: Too many local variables (32/15) (too-many-locals)
discrete/__main__.py:197:8: C0103: Variable name "dl" doesn't conform to snake_case naming style (invalid-name)
discrete/__main__.py:151:4: W0612: Unused variable 'ignore' (unused-variable)
discrete/__main__.py:153:4: W0612: Unused variable 'file_out_ohe_dis' (unused-variable)
discrete/__main__.py:181:4: W0612: Unused variable 'mycol' (unused-variable)
discrete/__main__.py:209:0: R0914: Too many local variables (37/15) (too-many-locals)
discrete/__main__.py:241:8: C0103: Variable name "ig" doesn't conform to snake_case naming style (invalid-name)
discrete/__main__.py:292:8: C0103: Variable name "dl" doesn't conform to snake_case naming style (invalid-name)
discrete/__main__.py:229:4: W0612: Unused variable 'file_out_ohe_dis' (unused-variable)
discrete/__main__.py:276:4: W0612: Unused variable 'mycol' (unused-variable)
discrete/__main__.py:209:0: R0915: Too many statements (53/50) (too-many-statements)
discrete/__main__.py:3:0: W0611: Unused K_Means imported from discrete.vl_kmeans_kmedian (unused-import)
discrete/__main__.py:3:0: W0611: Unused normalizer imported from discrete.vl_kmeans_kmedian (unused-import)
discrete/__main__.py:4:0: W0611: Unused VL_Binizer imported from discrete.binize (unused-import)
discrete/__main__.py:5:0: W0611: Unused VL_Discretizer_KMeans imported from discrete.binize_kmeans (unused-import)
discrete/__main__.py:6:0: W0611: Unused import csv (unused-import)
discrete/__main__.py:10:0: W0611: Unused import numpy (unused-import)
discrete/__main__.py:14:0: W0611: Unused OneHotEncoderBuilder imported from ohe.encoder (unused-import)
discrete/__main__.py:6:0: C0411: standard import "import csv" should be placed before "from discrete.vl_kmeans_kmedian import K_Means, normalizer" (wrong-import-order)
discrete/__main__.py:8:0: C0411: third party import "import pandas" should be placed before "from discrete.vl_kmeans_kmedian import K_Means, normalizer" (wrong-import-order)
discrete/__main__.py:9:0: C0411: third party import "import pandas as pd" should be placed before "from discrete.vl_kmeans_kmedian import K_Means, normalizer" (wrong-import-order)
discrete/__main__.py:10:0: C0411: third party import "import numpy" should be placed before "from discrete.vl_kmeans_kmedian import K_Means, normalizer" (wrong-import-order)
discrete/__main__.py:11:0: C0411: third party import "import numpy as np" should be placed before "from discrete.vl_kmeans_kmedian import K_Means, normalizer" (wrong-import-order)
discrete/__main__.py:15:0: C0412: Imports from package discrete are not grouped (ungrouped-imports)
************* Module discrete.binize_kmeans
discrete/binize_kmeans.py:14:0: C0325: Unnecessary parens after 'return' keyword (superfluous-parens)
discrete/binize_kmeans.py:75:0: C0301: Line too long (208/160) (line-too-long)
discrete/binize_kmeans.py:82:0: C0301: Line too long (198/160) (line-too-long)
discrete/binize_kmeans.py:84:0: C0301: Line too long (166/160) (line-too-long)
discrete/binize_kmeans.py:119:57: C0326: Exactly one space required after comma
        valid_strategy = ('uniform', 'quantile', 'kmeans',  'dbscan',  'analyst_supervised')
                                                         ^ (bad-whitespace)
discrete/binize_kmeans.py:119:68: C0326: Exactly one space required after comma
        valid_strategy = ('uniform', 'quantile', 'kmeans',  'dbscan',  'analyst_supervised')
                                                                    ^ (bad-whitespace)
discrete/binize_kmeans.py:173:20: C0326: Exactly one space required before assignment
                db  = DBSCAN(eps=3, min_samples=n_bins[jj])
                    ^ (bad-whitespace)
discrete/binize_kmeans.py:183:47: C0326: Exactly one space required after comma
                if CheckForLess(self.edge_array,col_max) == False:
                                               ^ (bad-whitespace)
discrete/binize_kmeans.py:1:0: C0114: Missing module docstring (missing-module-docstring)
discrete/binize_kmeans.py:5:0: W0404: Reimport 'numpy' (imported line 3) (reimported)
discrete/binize_kmeans.py:13:0: C0103: Function name "CheckForLess" doesn't conform to snake_case naming style (invalid-name)
discrete/binize_kmeans.py:13:0: C0116: Missing function or method docstring (missing-function-docstring)
discrete/binize_kmeans.py:15:0: C0413: Import "from sklearn.preprocessing import OneHotEncoder" should be placed at the top of the module (wrong-import-position)
discrete/binize_kmeans.py:17:0: C0103: Class name "VL_Discretizer_KMeans" doesn't conform to PascalCase naming style (invalid-name)
discrete/binize_kmeans.py:88:4: W0102: Dangerous default value [] as argument (dangerous-default-value)
discrete/binize_kmeans.py:95:4: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
discrete/binize_kmeans.py:95:4: C0103: Argument name "y" doesn't conform to snake_case naming style (invalid-name)
discrete/binize_kmeans.py:95:4: R0914: Too many local variables (21/15) (too-many-locals)
discrete/binize_kmeans.py:135:12: C0103: Variable name "jj" doesn't conform to snake_case naming style (invalid-name)
discrete/binize_kmeans.py:160:16: C0103: Variable name "km" doesn't conform to snake_case naming style (invalid-name)
discrete/binize_kmeans.py:173:16: C0103: Variable name "db" doesn't conform to snake_case naming style (invalid-name)
discrete/binize_kmeans.py:183:19: C0121: Comparison to False should be 'not expr' (singleton-comparison)
discrete/binize_kmeans.py:95:21: W0613: Unused argument 'y' (unused-argument)
discrete/binize_kmeans.py:95:4: R0912: Too many branches (14/12) (too-many-branches)
discrete/binize_kmeans.py:95:4: R0915: Too many statements (58/50) (too-many-statements)
discrete/binize_kmeans.py:247:4: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
discrete/binize_kmeans.py:263:8: C0103: Variable name "Xt" doesn't conform to snake_case naming style (invalid-name)
discrete/binize_kmeans.py:270:12: C0103: Variable name "jj" doesn't conform to snake_case naming style (invalid-name)
discrete/binize_kmeans.py:286:4: C0103: Argument name "Xt" doesn't conform to snake_case naming style (invalid-name)
discrete/binize_kmeans.py:308:8: C0103: Variable name "Xinv" doesn't conform to snake_case naming style (invalid-name)
discrete/binize_kmeans.py:314:12: C0103: Variable name "jj" doesn't conform to snake_case naming style (invalid-name)
discrete/binize_kmeans.py:200:8: W0201: Attribute 'bin_edges_' defined outside __init__ (attribute-defined-outside-init)
discrete/binize_kmeans.py:201:8: W0201: Attribute 'n_bins_' defined outside __init__ (attribute-defined-outside-init)
discrete/binize_kmeans.py:204:12: W0201: Attribute '_encoder' defined outside __init__ (attribute-defined-outside-init)
discrete/binize_kmeans.py:4:0: C0411: standard import "import warnings" should be placed before "import numpy as np" (wrong-import-order)
discrete/binize_kmeans.py:1:0: R0801: Similar lines in 2 files
==discrete.binize:164
==discrete.binize_kmeans:302
        check_is_fitted(self)

        if 'onehot' in self.encode:
            Xt = self._encoder.inverse_transform(Xt)

        Xinv = check_array(Xt, copy=True, dtype=FLOAT_DTYPES)
        n_features = self.n_bins_.shape[0]
        if Xinv.shape[1] != n_features:
            raise ValueError("Incorrect number of features. Expecting {}, "
                             "received {}.".format(n_features, Xinv.shape[1]))

        for jj in range(n_features):
            bin_edges = self.bin_edges_[jj]
            bin_centers = (bin_edges[1:] + bin_edges[:-1]) * 0.5
            Xinv[:, jj] = bin_centers[np.int_(Xinv[:, jj])]

        return Xinv (duplicate-code)
discrete/binize_kmeans.py:1:0: R0801: Similar lines in 2 files
==discrete.binize:118
==discrete.binize_kmeans:226
            return np.full(n_features, orig_bins, dtype=np.int)

        n_bins = check_array(orig_bins, dtype=np.int, copy=True,
                             ensure_2d=False)

        if n_bins.ndim > 1 or n_bins.shape[0] != n_features:
            raise ValueError("n_bins must be a scalar or array "
                             "of shape (n_features,).")

        bad_nbins_value = (n_bins < 2) | (n_bins != orig_bins)

        violating_indices = np.where(bad_nbins_value)[0]
        if violating_indices.shape[0] > 0:
            indices = ", ".join(str(i) for i in violating_indices)
            raise ValueError("{} received an invalid number "
                             "of bins at indices {}. Number of bins "
                             "must be at least 2, and must be an int." (duplicate-code)
discrete/binize_kmeans.py:1:0: R0801: Similar lines in 2 files
==discrete.__main__:0
==discrete.generate_timeseries:0
import argparse

from discrete.vl_kmeans_kmedian import K_Means, normalizer
from discrete.binize import VL_Binizer
from discrete.binize_kmeans import VL_Discretizer_KMeans
import csv

import pandas
import pandas as pd
import numpy
import numpy as np


from ohe.encoder import OneHotEncoderBuilder
from discrete.discretizer import DiscretizerBuilder
 (duplicate-code)
discrete/binize_kmeans.py:1:0: R0801: Similar lines in 2 files
==discrete.binize:151
==discrete.binize_kmeans:274
            rtol = 1.e-5
            atol = 1.e-8
            eps = atol + rtol * np.abs(Xt[:, jj])
            Xt[:, jj] = np.digitize(Xt[:, jj] + eps, bin_edges[jj][1:])
        np.clip(Xt, 0, self.n_bins_ - 1, out=Xt)

        if self.encode == 'ordinal':
            return Xt

        return self._encoder.transform(Xt)

    def inverse_transform(self, Xt):
 (duplicate-code)
discrete/binize_kmeans.py:1:0: R0801: Similar lines in 2 files
==discrete.binize:77
==discrete.binize_kmeans:177
            elif self.strategy == 'analyst_supervised':

                if self.edge_array == []:
                    raise ValueError("Must have edges ")

                if CheckForLess(self.edge_array,col_max) == False:
                    raise ValueError("No edge bigger than number in list ")

                bin_edge_manual = self.edge_array
                arr = numpy.array(bin_edge_manual)
                bin_edges[jj] = arr

            # Remove bins whose width are too small (i.e., <= 1e-8) (duplicate-code)
discrete/binize_kmeans.py:1:0: R0801: Similar lines in 2 files
==discrete.binize:140
==discrete.binize_kmeans:260
        check_is_fitted(self)

        Xt = check_array(X, copy=True, dtype=FLOAT_DTYPES)
        n_features = self.n_bins_.shape[0]
        if Xt.shape[1] != n_features:
            raise ValueError("Incorrect number of features. Expecting {}, "
                             "received {}.".format(n_features, Xt.shape[1]))

        bin_edges = self.bin_edges_
        for jj in range(Xt.shape[1]):
 (duplicate-code)
discrete/binize_kmeans.py:1:0: R0801: Similar lines in 2 files
==discrete.binize:91
==discrete.binize_kmeans:191
                mask = np.ediff1d(bin_edges[jj], to_begin=np.inf) > 1e-8
                bin_edges[jj] = bin_edges[jj][mask]
                if len(bin_edges[jj]) - 1 != n_bins[jj]:
                    warnings.warn('Bins whose width are too small (i.e., <= '
                                  '1e-8) in feature %d are removed. Consider '
                                  'decreasing the number of bins.' % jj)
                    n_bins[jj] = len(bin_edges[jj]) - 1

        self.bin_edges_ = bin_edges
        self.n_bins_ = n_bins
 (duplicate-code)
discrete/binize_kmeans.py:1:0: R0801: Similar lines in 2 files
==discrete.binize:58
==discrete.binize_kmeans:138
            if col_min == col_max:
                warnings.warn("Feature %d is constant and will be "
                              "replaced with 0." % jj)
                n_bins[jj] = 1
                bin_edges[jj] = np.array([-np.inf, np.inf])
                continue

            if self.strategy == 'uniform': (duplicate-code)
discrete/binize_kmeans.py:1:0: R0801: Similar lines in 2 files
==discrete.binize:1
==discrete.binize_kmeans:1
import numbers
import numpy as np
import warnings
import numpy

from sklearn.utils.validation import check_array
from sklearn.utils.validation import check_is_fitted
from sklearn.utils.validation import FLOAT_DTYPES (duplicate-code)
discrete/binize_kmeans.py:1:0: R0801: Similar lines in 2 files
==discrete.binize:23
==discrete.binize_kmeans:111
        X = check_array(X, dtype='numeric')

        valid_encode = ('onehot', 'onehot-dense', 'ordinal')
        if self.encode not in valid_encode:
            raise ValueError("Valid options for 'encode' are {}. "
                             "Got encode={!r} instead."
                             .format(valid_encode, self.encode)) (duplicate-code)
discrete/binize_kmeans.py:1:0: R0801: Similar lines in 2 files
==discrete.binize:40
==discrete.binize_kmeans:127
        print("n_features " + str(n_features))
        n_bins = self._validate_n_bins(n_features)
        print("n_bins " + str(n_bins))
        bin_edges = np.zeros(n_features, dtype=object)
        print("bin_edges " + str(bin_edges))
 (duplicate-code)
discrete/binize_kmeans.py:1:0: R0801: Similar lines in 2 files
==discrete.binize:31
==discrete.binize_kmeans:119
        if self.strategy not in valid_strategy:
            raise ValueError("Valid options for 'strategy' are {}. "
                             "Got strategy={!r} instead."
                             .format(valid_strategy, self.strategy))

        n_features = X.shape[1] (duplicate-code)
discrete/binize_kmeans.py:1:0: R0801: Similar lines in 2 files
==discrete.binize:15
==discrete.binize_kmeans:87
    def __init__(self, n_bins=5, encode='onehot', strategy='quantile', edge_array=[]):
        self.n_bins = n_bins
        self.encode = encode
        self.strategy = strategy
        self.edge_array = edge_array
 (duplicate-code)
discrete/binize_kmeans.py:1:0: R0801: Similar lines in 2 files
==discrete.binize:107
==discrete.binize_kmeans:215
        orig_bins = self.n_bins
        if isinstance(orig_bins, numbers.Number):
            if not isinstance(orig_bins, numbers.Integral):
                raise ValueError("{} received an invalid n_bins type. "
                                 "Received {}, expected int." (duplicate-code)

------------------------------------------------------------------
Your code has been rated at 6.13/10 (previous run: 6.11/10, +0.01)

